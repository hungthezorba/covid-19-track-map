{"ast":null,"code":"var _jsxFileName = \"/Users/HungNguyen/SideProject/covid-19-track-map/src/mapBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHVuZ3RoZXpvcmJhIiwiYSI6ImNrYnE5MTZxYjJrNmMyc3B2YXZtdnFjb20ifQ.iEtRPDaQs56Mr53uQEh65A';\nexport default class MapBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 103.02301,\n      lat: 9.17682,\n      zoom: 2,\n      dotSize: 100\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const dotSize = 200;\n    const pulsingDot = {\n      width: dotSize,\n      height: dotSize,\n      data: new Uint8Array(dotSize * dotSize * 4),\n      onAdd: function () {\n        var canvas = document.createElement('canvas');\n        this.context = canvas.getContext('2d');\n      },\n      render: function () {\n        var duration = 1000;\n        var t = performance.now() % duration / duration;\n        var radius = dotSize / 2 * 0.3;\n        var outerRadius = dotSize / 2 * 0.7 * t + radius;\n        var context = this.context; // draw outer circle\n\n        context.clearRect(0, 0, this.width, this.height);\n        context.beginPath();\n        context.arc(this.width / 2, this.height / 2, outerRadius, 0, Math.PI * 2);\n        context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\n        context.fill(); // draw inner circle\n\n        context.beginPath();\n        context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);\n        context.fillStyle = 'rgba(255, 100, 100, 1)';\n        context.strokeStyle = 'white';\n        context.lineWidth = 2 + 4 * (1 - t);\n        context.fill();\n        context.stroke(); // update this image's data with data from the canvas\n\n        this.data = context.getImageData(0, 0, this.width, this.height).data; // continuously repaint the map, resulting in the smooth animation of the dot\n\n        map.triggerRepaint(); // return `true` to let the map know that the image was updated\n\n        return true;\n      }\n    };\n    map.on('load', function () {\n      map.addImage('pulsing-dot', pulsingDot, {\n        pixelRatio: 2\n      });\n      map.addSource('points', {\n        'type': 'geojson',\n        'data': {\n          'type': 'FeatureCollection',\n          'features': [{\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Point',\n              'coordinates': [this.state.lat, this.state.lng]\n            }\n          }]\n        }\n      });\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'points',\n        'layout': {\n          'icon-image': 'pulsing-dot'\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: element => this.mapContainer = element,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/HungNguyen/SideProject/covid-19-track-map/src/mapBox.js"],"names":["React","ReactDOM","mapboxgl","accessToken","MapBox","Component","constructor","props","state","lng","lat","zoom","dotSize","componentDidMount","render","pulsingDot","width","height","data","Uint8Array","onAdd","canvas","document","createElement","context","getContext","duration","t","performance","now","radius","outerRadius","clearRect","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","map","triggerRepaint","on","addImage","pixelRatio","addSource","addLayer","element","mapContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHVuZ3RoZXpvcmJhIiwiYSI6ImNrYnE5MTZxYjJrNmMyc3B2YXZtdnFjb20ifQ.iEtRPDaQs56Mr53uQEh65A';\n\n\n\nexport default class MapBox extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lng: 103.02301,\n            lat: 9.17682,\n            zoom: 2,\n            dotSize: 100,\n        }\n\n    }\n\n\n    componentDidMount() {\n\n    }\n\n\n\n    render() {\n\n        const dotSize = 200\n\n\n        const pulsingDot = {\n            width: dotSize,\n            height: dotSize,\n            data: new Uint8Array(dotSize * dotSize * 4),\n            onAdd: function () {\n                var canvas = document.createElement('canvas');\n                this.context = canvas.getContext('2d');\n            },\n            render: function () {\n                var duration = 1000;\n                var t = (performance.now() % duration) / duration;\n\n                var radius = (dotSize / 2) * 0.3;\n                var outerRadius = (dotSize / 2) * 0.7 * t + radius;\n                var context = this.context;\n\n                // draw outer circle\n                context.clearRect(0, 0, this.width, this.height);\n                context.beginPath();\n                context.arc(\n                    this.width / 2,\n                    this.height / 2,\n                    outerRadius,\n                    0,\n                    Math.PI * 2\n                );\n                context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\n                context.fill();\n\n                // draw inner circle\n                context.beginPath();\n                context.arc(\n                    this.width / 2,\n                    this.height / 2,\n                    radius,\n                    0,\n                    Math.PI * 2\n                );\n                context.fillStyle = 'rgba(255, 100, 100, 1)';\n                context.strokeStyle = 'white';\n                context.lineWidth = 2 + 4 * (1 - t);\n                context.fill();\n                context.stroke();\n\n                // update this image's data with data from the canvas\n                this.data = context.getImageData(\n                    0,\n                    0,\n                    this.width,\n                    this.height\n                ).data;\n\n                // continuously repaint the map, resulting in the smooth animation of the dot\n                map.triggerRepaint();\n\n                // return `true` to let the map know that the image was updated\n                return true;\n            }\n        }\n\n        map.on('load', function () {\n            map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\n\n            map.addSource('points', {\n                'type': 'geojson',\n                'data': {\n                    'type': 'FeatureCollection',\n                    'features': [\n                        {\n                            'type': 'Feature',\n                            'geometry': {\n                                'type': 'Point',\n                                'coordinates': [this.state.lat, this.state.lng]\n                            }\n                        }\n                    ]\n                }\n            });\n            map.addLayer({\n                'id': 'points',\n                'type': 'symbol',\n                'source': 'points',\n                'layout': {\n                    'icon-image': 'pulsing-dot'\n                }\n            });\n        });\n\n\n        return (\n            <div>\n                <div ref={element => this.mapContainer = element} className=\"mapContainer\" />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}