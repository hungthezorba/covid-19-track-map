{"ast":null,"code":"var _jsxFileName = \"/Users/HungNguyen/SideProject/covid-19-track-map/src/mapBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHVuZ3RoZXpvcmJhIiwiYSI6ImNrYnE5MTZxYjJrNmMyc3B2YXZtdnFjb20ifQ.iEtRPDaQs56Mr53uQEh65A';\nexport default class MapBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pulsingDot = {\n      width: this.props.dotSize,\n      height: this.props.dotSize,\n      data: new Uint8Array(this.props.dotSize * this.props.dotSize * 4),\n      onAdd: function () {\n        var canvas = document.createElement('canvas');\n        canvas.width = this.width;\n        canvas.height = this.height;\n        this.context = canvas.getContext('2d');\n      },\n      render: function () {\n        var duration = 1000;\n        var t = performance.now() % duration / duration;\n        var radius = this.state.size / 2 * 0.3;\n        var outerRadius = this.state.size / 2 * 0.7 * t + radius;\n        var context = this.context; // draw outer circle\n\n        context.clearRect(0, 0, this.width, this.height);\n        context.beginPath();\n        context.arc(this.width / 2, this.height / 2, outerRadius, 0, Math.PI * 2);\n        context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\n        context.fill(); // draw inner circle\n\n        context.beginPath();\n        context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);\n        context.fillStyle = 'rgba(255, 100, 100, 1)';\n        context.strokeStyle = 'white';\n        context.lineWidth = 2 + 4 * (1 - t);\n        context.fill();\n        context.stroke(); // update this image's data with data from the canvas\n\n        this.data = context.getImageData(0, 0, this.width, this.height).data; // continuously repaint the map, resulting in the smooth animation of the dot\n\n        this.state.map.triggerRepaint(); // return `true` to let the map know that the image was updated\n\n        return true;\n      }\n    };\n    this.state = {\n      lng: 103.02301,\n      lat: 9.17682,\n      zoom: 2,\n      dotSize: 100\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('load', function () {\n      map.addImage('pulsing-dot', this.props.pulsingDot, {\n        pixelRatio: 2\n      });\n      map.addSource('points', {\n        'type': 'geojson',\n        'data': {\n          'type': 'FeatureCollection',\n          'features': [{\n            'type': 'Feature',\n            'geometry': {\n              'type': 'Point',\n              'coordinates': [0, 0]\n            }\n          }]\n        }\n      });\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'points',\n        'layout': {\n          'icon-image': 'pulsing-dot'\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: element => this.mapContainer = element,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/HungNguyen/SideProject/covid-19-track-map/src/mapBox.js"],"names":["React","ReactDOM","mapboxgl","accessToken","MapBox","Component","constructor","props","pulsingDot","width","dotSize","height","data","Uint8Array","onAdd","canvas","document","createElement","context","getContext","render","duration","t","performance","now","radius","state","size","outerRadius","clearRect","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","map","triggerRepaint","lng","lat","zoom","componentDidMount","Map","container","mapContainer","style","center","on","addImage","pixelRatio","addSource","addLayer","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaHVuZ3RoZXpvcmJhIiwiYSI6ImNrYnE5MTZxYjJrNmMyc3B2YXZtdnFjb20ifQ.iEtRPDaQs56Mr53uQEh65A';\n\n\n\nexport default class MapBox extends React.Component {\n\n    \n\n    constructor(props) {\n        super(props);\n        this.pulsingDot = {\n            width: this.props.dotSize,\n            height: this.props.dotSize,\n            data: new Uint8Array(this.props.dotSize * this.props.dotSize * 4),\n            onAdd: function() {\n                var canvas = document.createElement('canvas');\n                canvas.width = this.width;\n                canvas.height = this.height;\n                this.context = canvas.getContext('2d');\n            },\n            render: function() {\n                var duration = 1000;\n                var t = (performance.now() % duration) / duration;\n                 \n                var radius = (this.state.size / 2) * 0.3;\n                var outerRadius = (this.state.size / 2) * 0.7 * t + radius;\n                var context = this.context;\n                 \n                // draw outer circle\n                context.clearRect(0, 0, this.width, this.height);\n                context.beginPath();\n                context.arc(\n                this.width / 2,\n                this.height / 2,\n                outerRadius,\n                0,\n                Math.PI * 2\n                );\n                context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\n                context.fill();\n                 \n                // draw inner circle\n                context.beginPath();\n                context.arc(\n                this.width / 2,\n                this.height / 2,\n                radius,\n                0,\n                Math.PI * 2\n                );\n                context.fillStyle = 'rgba(255, 100, 100, 1)';\n                context.strokeStyle = 'white';\n                context.lineWidth = 2 + 4 * (1 - t);\n                context.fill();\n                context.stroke();\n                 \n                // update this image's data with data from the canvas\n                this.data = context.getImageData(\n                0,\n                0,\n                this.width,\n                this.height\n                ).data;\n                 \n                // continuously repaint the map, resulting in the smooth animation of the dot\n                this.state.map.triggerRepaint();\n                 \n                // return `true` to let the map know that the image was updated\n                return true;\n                }\n        }\n        this.state = {\n        lng: 103.02301,\n        lat: 9.17682,\n        zoom: 2,\n        dotSize: 100,\n        \n    }\n}\n    \n\n    componentDidMount() {\n        const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: this.state.zoom\n        });\n\n        map.on('load', function() {\n            map.addImage('pulsing-dot', this.props.pulsingDot, { pixelRatio: 2 });\n             \n            map.addSource('points', {\n            'type': 'geojson',\n            'data': {\n            'type': 'FeatureCollection',\n            'features': [\n            {\n            'type': 'Feature',\n            'geometry': {\n            'type': 'Point',\n            'coordinates': [0, 0]\n            }\n            }\n            ]\n            }\n            });\n            map.addLayer({\n            'id': 'points',\n            'type': 'symbol',\n            'source': 'points',\n            'layout': {\n            'icon-image': 'pulsing-dot'\n            }\n            });\n            });\n    }\n\n   \n    \n\n    render() {\n        return (\n            <div>\n                <div ref={element => this.mapContainer = element} className=\"mapContainer\"/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}