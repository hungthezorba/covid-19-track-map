{"ast":null,"code":"var _jsxFileName = \"/Users/HungNguyen/SideProject/covid-19-track-map/src/Map.js\";\nimport React from 'react';\nimport Chart from \"react-google-charts\";\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.covid19api.com/summary\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        data: result.Countries\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n    var Countries = data.map(({\n      Country\n    }) => ({\n      Country\n    }));\n    var TotalConfirmed = data.map(({\n      TotalConfirmed\n    }) => ({\n      TotalConfirmed\n    }));\n    var mapData = [['Country', 'Total Confirmed']];\n    Countries.forEach(function (country) {\n      mapData = mapData.concat(country);\n    });\n    console.log(mapData);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        width: '500px',\n        height: '300px',\n        chartType: \"GeoChart\",\n        data: mapData // Note: you will need to get a mapsApiKey for your project.\n        // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n        ,\n        mapsApiKey: \"AIzaSyC-6XmXJFkRnXN4QMT74qR50pgyFAalnpE\",\n        rootProps: {\n          'data-testid': '1'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/HungNguyen/SideProject/covid-19-track-map/src/Map.js"],"names":["React","Chart","Map","Component","constructor","props","state","data","componentDidMount","fetch","then","res","json","result","setState","isLoaded","Countries","error","render","map","Country","TotalConfirmed","mapData","forEach","country","concat","console","log","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVR,QAAAA,IAAI,EAAEM,MAAM,CAACG;AAFH,OAAd;AAIH,KART,EASQ;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACP,WAAKH,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVE,QAAAA;AAFU,OAAd;AAIH,KAjBT;AAmBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,KAAF;AAASF,MAAAA,QAAT;AAAmBR,MAAAA;AAAnB,QAA4B,KAAKD,KAAvC;AACA,QAAIU,SAAS,GAAIT,IAAI,CAACY,GAAL,CAAS,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAT,CAAjB;AACA,QAAIC,cAAc,GAAGd,IAAI,CAACY,GAAL,CAAS,CAAC;AAACE,MAAAA;AAAD,KAAD,MAAuB;AAAEA,MAAAA;AAAF,KAAvB,CAAT,CAArB;AACA,QAAIC,OAAO,GAAG,CAAC,CAAC,SAAD,EAAY,iBAAZ,CAAD,CAAd;AACAN,IAAAA,SAAS,CAACO,OAAV,CAAkB,UAASC,OAAT,EAAkB;AAChCF,MAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAV;AACH,KAFD;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AAGA,QAAIL,KAAJ,EAAW;AACP,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACW,OAAnB,CAAP;AACH,KAFD,MAEO,IAAI,CAACb,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,MAAM,EAAE,OAFZ;AAGI,QAAA,SAAS,EAAC,UAHd;AAII,QAAA,IAAI,EAAEO,OAJV,CAKI;AACA;AANJ;AAOI,QAAA,UAAU,EAAC,yCAPf;AAQI,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAcH;AACJ;;AA9D4C","sourcesContent":["import React from 'react';\n\nimport Chart from \"react-google-charts\";\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.covid19api.com/summary\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        data: result.Countries\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, data } = this.state;\n        var Countries  = data.map(({ Country }) => ({ Country }));\n        var TotalConfirmed = data.map(({TotalConfirmed}) => ({ TotalConfirmed }))\n        var mapData = [['Country', 'Total Confirmed']]\n        Countries.forEach(function(country) {\n            mapData = mapData.concat(country)\n        })\n\n        console.log(mapData)\n\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <Chart\n                        width={'500px'}\n                        height={'300px'}\n                        chartType=\"GeoChart\"\n                        data={mapData}\n                        // Note: you will need to get a mapsApiKey for your project.\n                        // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n                        mapsApiKey=\"AIzaSyC-6XmXJFkRnXN4QMT74qR50pgyFAalnpE\"\n                        rootProps={{ 'data-testid': '1' }}\n                    />\n                </div>\n            );\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}