{"ast":null,"code":"var _jsxFileName = \"/Users/HungNguyen/SideProject/covid-19-track-map/client/src/mapBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport data from './data.json';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst options = [{\n  name: 'Population',\n  description: 'Estimated total population',\n  property: 'pop_est',\n  stops: [[0, '#f8d5cc'], [1000000, '#f4bfb6'], [5000000, '#f1a8a5'], [10000000, '#ee8f9a'], [50000000, '#ec739b'], [100000000, '#dd5ca8'], [250000000, '#c44cc0'], [500000000, '#9f43d7'], [1000000000, '#6e40e6']]\n}, {\n  name: 'GDP',\n  description: 'Estimate total GDP in millions of dollars',\n  property: 'gdp_md_est',\n  stops: [[0, '#f8d5cc'], [1000, '#f4bfb6'], [5000, '#f1a8a5'], [10000, '#ee8f9a'], [50000, '#ec739b'], [100000, '#dd5ca8'], [250000, '#c44cc0'], [5000000, '#9f43d7'], [10000000, '#6e40e6']]\n}];\nexport default class MapBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {\n      active: options[0]\n    };\n  }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [5, 34],\n      zoom: 1.5\n    });\n    this.map.on('load', () => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n\n      this.setFill();\n    });\n  }\n\n  setFill() {\n    const {\n      property,\n      stops\n    } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    });\n  }\n\n  render() {\n    const {\n      name,\n      description,\n      stops,\n      property\n    } = this.state.active;\n\n    const renderLegendKeys = (stop, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: \"txt-s\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mr6 round-full w12 h12 inline-block align-middle\",\n        style: {\n          backgroundColor: stop[1]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, `${stop[0].toLocaleString()}`));\n    };\n\n    const renderOptions = (option, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        key: i,\n        className: \"toggle-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: () => this.setState({\n          active: options[i]\n        }),\n        checked: option.property === property,\n        name: \"toggle\",\n        type: \"radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle txt-s py3 toggle--active-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, option.name));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.mapRef,\n      className: \"absolute top right left bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, options.map(renderOptions)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-white absolute bottom right mr12 mb24 py12 px12 shadow-darken10 round z1 wmax180\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"txt-bold txt-s block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt-s color-gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, description)), stops.map(renderLegendKeys)));\n  }\n\n}","map":{"version":3,"sources":["/Users/HungNguyen/SideProject/covid-19-track-map/client/src/mapBox.js"],"names":["React","ReactDOM","mapboxgl","data","accessToken","options","name","description","property","stops","MapBox","Component","constructor","props","mapRef","createRef","state","active","componentDidUpdate","setFill","componentDidMount","map","Map","container","current","style","center","zoom","on","addSource","type","addLayer","id","source","setPaintProperty","render","renderLegendKeys","stop","i","backgroundColor","toLocaleString","renderOptions","option","setState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\nimport data from './data.json'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst options = [{\n  name: 'Population',\n  description: 'Estimated total population',\n  property: 'pop_est',\n  stops: [\n    [0, '#f8d5cc'],\n    [1000000, '#f4bfb6'],\n    [5000000, '#f1a8a5'],\n    [10000000, '#ee8f9a'],\n    [50000000, '#ec739b'],\n    [100000000, '#dd5ca8'],\n    [250000000, '#c44cc0'],\n    [500000000, '#9f43d7'],\n    [1000000000, '#6e40e6']\n  ]\n}, {\n  name: 'GDP',\n  description: 'Estimate total GDP in millions of dollars',\n  property: 'gdp_md_est',\n  stops: [\n    [0, '#f8d5cc'],\n    [1000, '#f4bfb6'],\n    [5000, '#f1a8a5'],\n    [10000, '#ee8f9a'],\n    [50000, '#ec739b'],\n    [100000, '#dd5ca8'],\n    [250000, '#c44cc0'],\n    [5000000, '#9f43d7'],\n    [10000000, '#6e40e6']\n  ]\n}]\n\nexport default class MapBox extends React.Component {\n  mapRef = React.createRef();\n  map;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: options[0]\n    };\n  }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [5, 34],\n      zoom: 1.5\n    });\n\n    this.map.on('load', () => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n\n      this.setFill();\n    });\n  }\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    });    \n  }\n\n  render() {\n    const { name, description, stops, property } = this.state.active;\n    const renderLegendKeys = (stop, i) => {\n      return (\n        <div key={i} className='txt-s'>\n          <span className='mr6 round-full w12 h12 inline-block align-middle' style={{ backgroundColor: stop[1] }} />\n          <span>{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n\n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container\">\n          <input onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div className=\"toggle txt-s py3 toggle--active-white\">{option.name}</div>\n        </label>\n      );\n    }\n\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"absolute top right left bottom\" />\n        <div className=\"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\">\n          {options.map(renderOptions)}\n        </div>\n        <div className=\"bg-white absolute bottom right mr12 mb24 py12 px12 shadow-darken10 round z1 wmax180\">\n          <div className='mb6'>\n            <h2 className=\"txt-bold txt-s block\">{name}</h2>\n            <p className='txt-s color-gray'>{description}</p>\n          </div>\n          {stops.map(renderLegendKeys)}\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}