{"ast":null,"code":"var _jsxFileName = \"/Users/HungNguyen/SideProject/covid-19-track-map/src/Map.js\";\nimport React from 'react';\nimport Chart from \"react-google-charts\";\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.covid19api.com/summary\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        data: result.Countries\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n    var mapData = data.map(function (item) {\n      return item[\"Countries\"], item[\"TotalConfirmed\"];\n    });\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, data.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.Country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/HungNguyen/SideProject/covid-19-track-map/src/Map.js"],"names":["React","Chart","Map","Component","constructor","props","state","data","componentDidMount","fetch","then","res","json","result","setState","isLoaded","Countries","error","render","mapData","map","item","message","Country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZR,QAAAA,IAAI,EAAEM,MAAM,CAACG;AAFD,OAAd;AAID,KARL,EASI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACT,WAAKH,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZE,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,KAAF;AAASF,MAAAA,QAAT;AAAmBR,MAAAA;AAAnB,QAA4B,KAAKD,KAAvC;AACA,QAAIa,OAAO,GAAGZ,IAAI,CAACa,GAAL,CAAS,UAASC,IAAT,EAAe;AAAE,aAAOA,IAAI,CAAC,WAAD,CAAJ,EAAmBA,IAAI,CAAC,gBAAD,CAA9B;AAAmD,KAA7E,CAAd;;AACA,QAAIJ,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACK,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACP,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,IAAI,CAACa,GAAL,CAASC,IAAI,iBACZ;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AASD;AACF;;AAhD0C","sourcesContent":["import React from 'react';\n\nimport Chart from \"react-google-charts\";\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : []\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.covid19api.com/summary\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.Countries\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\n    \n      render() {\n        const { error, isLoaded, data } = this.state;\n        var mapData = data.map(function(item) { return item[\"Countries\"], item[\"TotalConfirmed\"]; });\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <ul>\n              {data.map(item => (\n                <li key={item.Country}>\n                  \n                </li>\n              ))}\n            </ul>\n          );\n        }\n      }\n    \n}"]},"metadata":{},"sourceType":"module"}